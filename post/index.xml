<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on danielfbm</title>
    <link>https://danielfbm.github.io/post/</link>
    <description>Recent content in Posts on danielfbm</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 22 May 2022 11:34:00 +0800</lastBuildDate><atom:link href="https://danielfbm.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to reuse steps in Tekton tasks with kustomize</title>
      <link>https://danielfbm.github.io/post/kustomize-tekton-task/</link>
      <pubDate>Sun, 22 May 2022 11:34:00 +0800</pubDate>
      
      <guid>https://danielfbm.github.io/post/kustomize-tekton-task/</guid>
      <description>Creating Tekton tasks is real fun! Its similarities to pod containers, and how it works make developing and testing super easy. Still, sometimes it is necessary to reuse steps in multiple tasks, like when using reviewdog.
In this post, we will learn how to do this very easily using kustomize, and the repo danielfbm/tekton-tasks-kustomize has a ready-to-use example.
Let&amp;rsquo;s say we want two different tasks golang-test and golangci-lint need to add a reviewdog-report step as seen below:</description>
    </item>
    
    <item>
      <title>My First Sonobuoy Contribution</title>
      <link>https://danielfbm.github.io/post/sonobuoy-contribution/</link>
      <pubDate>Sun, 29 Dec 2019 15:52:19 +0800</pubDate>
      
      <guid>https://danielfbm.github.io/post/sonobuoy-contribution/</guid>
      <description>While using Sonobuoy as our main test runner engine at Alauda we noticed a small issue and decided to contribute the patch:
Sonobuoy will create Kubernetes RBAC ClusterRole and ClusterRoleBinding but will also destroy together with all the test data. This is ideal, but in the current implementation it will delete it globally affecting other parallel tests permissions, resulting in lots of permission failures. This Pull-request solves this issue by adding a test run namespace label to all Cluster resources, and make these resource names unique according to the namespace.</description>
    </item>
    
    <item>
      <title>Sonobuoy v0.16.3</title>
      <link>https://danielfbm.github.io/post/sonobuoy-0.16.3/</link>
      <pubDate>Sat, 14 Dec 2019 11:59:59 +0800</pubDate>
      
      <guid>https://danielfbm.github.io/post/sonobuoy-0.16.3/</guid>
      <description>Here is the Official website link and the GitHub repo.
Update: version v0.17.0 is available
What is Sonobuoy? According to the website:
 Sonobuoy is a diagnostic tool that makes it easier to understand the state of a Kubernetes cluster by running a set of plugins (including Kubernetes conformance tests) in an accessible and non-destructive manner. It is a customizable, extendable, and cluster-agnostic way to generate clear, informative reports about your cluster.</description>
    </item>
    
    <item>
      <title>Golang introduction</title>
      <link>https://danielfbm.github.io/post/golang-intro/</link>
      <pubDate>Tue, 31 Jan 2017 23:00:00 +0800</pubDate>
      
      <guid>https://danielfbm.github.io/post/golang-intro/</guid>
      <description>first post with Hugo website engine</description>
    </item>
    
    <item>
      <title>Tasks app and microservices architecture</title>
      <link>https://danielfbm.github.io/post/post-task-manager/</link>
      <pubDate>Sun, 21 Aug 2016 20:51:42 +0800</pubDate>
      
      <guid>https://danielfbm.github.io/post/post-task-manager/</guid>
      <description>Task example app architecture</description>
    </item>
    
    <item>
      <title>How I setup this blog</title>
      <link>https://danielfbm.github.io/post/new-start/</link>
      <pubDate>Sun, 19 Jun 2016 18:00:00 +0800</pubDate>
      
      <guid>https://danielfbm.github.io/post/new-start/</guid>
      <description>First post with Hugo and how I built this blog</description>
    </item>
    
  </channel>
</rss>
